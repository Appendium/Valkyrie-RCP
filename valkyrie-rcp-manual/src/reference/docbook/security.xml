<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="security"
         xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
                http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
                http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd">
  <title>Security</title>

  <toc/>
  
  <section id="security:integrating">
    <title>Integration security in a GUI application</title>
    <para>
      Integrating security into a GUI application can be cumbersome. The reason for this is:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Adding login and logout functionality can take a lot of work
        </para>
      </listitem>
      <listitem>
        <para>
          Adjusting screens to handle with security limitations
        </para>
      </listitem>
    </itemizedlist>
    <para>
      Valkyrie integrates with Spring Security to provide a framework to handle security-based problems and
      offers a solution for these.
    </para>
  </section>
  <section id="security:spring">
    <title>Spring Security integration</title>
    <para>
      Simply integrating login functionality is easy: Valkyrie has a built in login command that shows a login screen.
      Enabling it is just a matter of calling it on startup through the session initializer.
    </para>
    <programlisting language="java"><![CDATA[@Override
public ApplicationSessionInitializer applicationSessionInitializer() {
    ApplicationSessionInitializer initializer = new ApplicationSessionInitializer();
    initializer.setPreStartupCommands(Lists.newArrayList("loginCommand"));
    return initializer;
}]]></programlisting>
    <para>
      The login command requires an authentication manager in the context. This is also one of the reasons why
        Valkyrie still uses an XML context: at the moment, it's still easier to configure some things in XML, such
        as the authentication manager.
    </para>
    <para><programlisting language="xml"><![CDATA[<security:authentication-manager>
    <security:authentication-provider>
        <security:user-service>
            <security:user name="admin" password="admin" authorities="ADMIN"/>
            <security:user name="user" password="user" authorities="USER"/>
        </security:user-service>
    </security:authentication-provider>
</security:authentication-manager> ]]></programlisting></para>
      <para><mediaobject>
          <imageobject>
              <imagedata align="center"
                         fileref="images/login.png"
                         format="PNG"/>
          </imageobject>
      </mediaobject></para>
  </section>
</chapter>
