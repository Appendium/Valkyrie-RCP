allprojects {
    apply plugin: "idea"
    apply plugin: "eclipse"

    group = "dk.navicon"
    ext.springVersion = "3.2.4.RELEASE"

    repositories {
        maven {
            url "file://${rootDir}/dependencies"
        }
        mavenCentral()
    }
}

idea {
    project {
        ipr {
            withXml {
                IdeaEnricher.enableGitScm(this.project, it.asNode())
            }
        }
    }
}

configure(subprojects - project(":valkyrie-rcp-samples") - project(":valkyrie-rcp-integrations")) { subproject ->
    apply plugin: "java"

    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
    }

    compileJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    compileTestJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    test {
        scanForTestClasses = false
        include '**/*Tests.*'
        exclude '**/*Abstract*.*'
    }

    jar {
        manifest.attributes["Created-By"] =
            "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
        manifest.attributes["Implementation-Title"] = subproject.name
        manifest.attributes["Implementation-Version"] = subproject.version
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allJava.srcDirs
        include "**/*.java"
    }

    task javadocJar(type: Jar) {
        classifier = "javadoc"
        from javadoc
    }

    artifacts {
        archives sourcesJar
    }

    dependencies {
        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-core:1.9.5"
        testCompile "org.easymock:easymock:3.0"
        testCompile "org.springframework:spring-test:${springVersion}"
        compile "org.slf4j:slf4j-api:1.6.1"
        compile "org.slf4j:jcl-over-slf4j:1.6.1"
        runtime "ch.qos.logback:logback-classic:0.9.26"
    }
}

project("valkyrie-rcp-resources") {
    dependencies {
        compile "com.famfamfam:silk:1.3"
        compile "org.freedesktop.tango:tango-icon-theme:0.8.90"
    }
}

project("valkyrie-rcp-core") {
    dependencies {
        compile project(":valkyrie-rcp-resources")
        compile "com.l2fprod:l2fprod-common-all:7.3"
        compile "net.java.dev.glazedlists:glazedlists_java15:1.9.0"
        compile "commons-beanutils:commons-beanutils:1.8.3"
        compile "commons-lang:commons-lang:2.6"
        compile "commons-collections:commons-collections:3.2.1"
        compile "commons-httpclient:commons-httpclient:3.1"
        compile "com.google.guava:guava:14.0.1"
        compile "org.springframework.security:spring-security-core:3.1.4.RELEASE"
        compile "org.springframework.security:spring-security-config:3.1.4.RELEASE"
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.swinglabs.swingx:swingx-all:1.6.5-1"
        compile "com.jgoodies:forms:1.2.1"
        compile("org.springframework.webflow:spring-binding:2.3.2.RELEASE") {
            exclude module: "spring-beans"
            exclude module: "spring-core"
            exclude module: "spring-context"
            exclude module: "spring-expression"
        }
        compile "javax.validation:validation-api:1.1.0.Final"
        compile "com.miglayout:miglayout-swing:4.2"
    }
}

project("valkyrie-rcp-integrations:valkyrie-rcp-jodatime") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile "joda-time:joda-time:2.2"
    }
}

project("valkyrie-rcp-integrations:valkyrie-rcp-jideoss") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile "com.jidesoft:jide-oss:3.5.6"
    }
}


project("valkyrie-rcp-integrations:valkyrie-rcp-vldocking") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile "com.vlsolutions:vldocking:2.1.4"
    }
}

project("valkyrie-rcp-samples:valkyrie-rcp-simple-sample") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile project(":valkyrie-rcp-integrations:valkyrie-rcp-jideoss")
        compile "com.jgoodies:jgoodies-looks:2.5.2"
    }

    task(runSample, dependsOn: 'classes', type: JavaExec) {
        main = 'org.valkyriercp.sample.simple.SimpleSampleRunner'
        classpath = sourceSets.main.runtimeClasspath
    }
}

project("valkyrie-rcp-samples:valkyrie-rcp-showcase-sample") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile project(":valkyrie-rcp-integrations:valkyrie-rcp-jideoss")
        compile "com.jgoodies:jgoodies-looks:2.5.2"
        compile "org.jodd:jodd:3.2.5"
    }

    task(runSample, dependsOn: 'classes', type: JavaExec) {
        main = 'org.valkyriercp.sample.showcase.ShowcaseRunner'
        classpath = sourceSets.main.runtimeClasspath
    }
}


project("valkyrie-rcp-samples:valkyrie-rcp-dataeditor-sample") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile project(":valkyrie-rcp-integrations:valkyrie-rcp-jideoss")
        compile "com.jgoodies:jgoodies-looks:2.5.2"
        compile "com.github.insubstantial:substance:7.2.1"
        compile "com.github.insubstantial:substance-swingx:7.2.1"
    }

    task(runSample, dependsOn: 'classes', type: JavaExec) {
        main = 'org.valkyriercp.sample.dataeditor.DataEditorApp'
        classpath = sourceSets.main.runtimeClasspath
    }
}


project("valkyrie-rcp-samples:valkyrie-rcp-vldocking-sample") {
    dependencies {
        compile project(":valkyrie-rcp-core")
        compile project(":valkyrie-rcp-integrations:valkyrie-rcp-vldocking")
        compile "com.jgoodies:jgoodies-looks:2.5.2"
    }

    task(runSample, dependsOn: 'classes', type: JavaExec) {
        main = 'org.valkyriercp.sample.simple.VLDockingSampleRunner'
        classpath = sourceSets.main.runtimeClasspath
    }
}




